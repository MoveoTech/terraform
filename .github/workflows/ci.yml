name: ci
on:
  push:
    branches:
      - main
  pull_request:
jobs:
  pre-commit-checks:
    name: Pre-commit checks
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Terraform min/max versions
        id: minMax
        uses: clowdhaus/terraform-min-max@v1.1.1
      - name: Pre-commit Terraform ${{ steps.minMax.outputs.maxVersion }}
        uses: clowdhaus/terraform-composite-actions/pre-commit@v1.6.0
        with:
          terraform-version: ${{ steps.minMax.outputs.maxVersion }}
          terraform-docs-version: v0.16.0
  validate:
    name: Validate examples
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: examples
    steps:
      - uses: hashicorp/setup-terraform@v2
      - name: Checkout
        uses: actions/checkout@v3
      - name: Check examples
        env:
          EXAMPLES: simple
        run: |
          for EXAMPLE in ${EXAMPLES}
          do
            echo "Validating $EXAMPLE"...
            cd $EXAMPLE && terraform init && terraform validate && cd -
          done
  checkov-job:
    runs-on: ubuntu-latest
    name: checkov-action
    steps:
      - name: Checkout repo
        uses: actions/checkout@master

      - name: Run Checkov action
        id: checkov
        uses: bridgecrewio/checkov-action@master
        with:
          directory: ./
          quiet: true # optional: display only failed checks
          soft_fail: true # optional: do not return an error code if there are failed checks
          framework: terraform # optional: run only on a specific infrastructure {cloudformation,terraform,kubernetes,all}
          output_format: sarif # optional: the output format, one of: cli, json, junitxml, github_failed_only, or sarif. Default: sarif
          download_external_modules: true # optional: download external terraform modules from public git repositories and terraform registry
          log_level: DEBUG # optional: set log level. Default WARNING
  docs:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      with:
        ref: ${{ github.event.pull_request.head.ref }}

    - name: Render terraform docs and push changes back to PR
      uses: terraform-docs/gh-actions@main
      with:
        working-dir: .
        output-file: README.md
        output-method: inject
        git-push: "true"

    - name: Render terraform example complete docs and push changes back to PR
      uses: terraform-docs/gh-actions@main
      with:
        working-dir: ./examples/complete
        output-file: README.md
        output-method: inject
        git-push: "true"


    - name: Render terraform example simple docs and push changes back to PR
      uses: terraform-docs/gh-actions@main
      with:
        working-dir: ./examples/simple
        output-file: README.md
        output-method: inject
        git-push: "true"
  client-build:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./client
    strategy:
      matrix:
        node-version: [12.x, 14.x, 16.x]
    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
    - run: npm i
    - run: npm run build --if-present
  server-build:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./server
    strategy:
      matrix:
        node-version: [12.x, 14.x, 16.x]
    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
    - run: npm i
    - run: npm run build --if-present

  automerge:
    needs: [pre-commit-checks,validate,checkov-job,docs,client-build,server-build]
    runs-on: ubuntu-latest

    permissions:
      pull-requests: write
      contents: write

    steps:
      - uses: fastify/github-action-merge-dependabot@v3.3.0
        if: ${{ github.actor == 'dependabot[bot]' && github.event_name == 'pull_request' }}
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
